-- 1
SELECT COLUMN_NAME
FROM information_schema.columns 
WHERE TABLE_NAME = 'naep';

-- 2
SELECT * 
FROM naep
LIMIT 50;

-- 3
SELECT 
	state,
	COUNT(avg_math_8_score) AS count_math_scores,
	AVG(avg_math_8_score) AS avg_math_score,
	MIN(avg_math_8_score) AS min_math_score,
	MAX(avg_math_8_score) AS max_math_score
FROM naep
GROUP BY state
ORDER BY state;

--4
SELECT 
	state,
	COUNT(avg_math_8_score) AS count_math_scores,
	AVG(avg_math_8_score) AS avg_math_score,
	MIN(avg_math_8_score) AS min_math_score,
	MAX(avg_math_8_score) AS max_math_score
FROM naep
GROUP BY state
HAVING (MAX(avg_math_8_score) - MIN(avg_math_8_score)) > 30
ORDER BY state;

--5
SELECT 
	state AS bottom_10_states
FROM naep 
WHERE year = 2000
ORDER BY avg_math_4_score
LIMIT 10;

--6
SELECT
	ROUND(AVG(avg_math_4_score), 2) AS avg_all_math_scores
FROM naep
WHERE year = 2000;

--7
WITH avg_all_math_scores AS
	(
	SELECT 
		state,
		avg_math_4_score,
		ROUND(AVG(avg_math_4_score), 2) AS avg_all
	FROM naep
	WHERE year = 2000
	GROUP BY state, avg_math_4_score)
SELECT 
	state AS below_average_states_y2000
FROM avg_all_math_scores
WHERE avg_math_4_score < avg_all;

--8
SELECT
	state AS scores_missing_y2000
FROM naep
WHERE year = 2000 AND avg_math_4_score IS NULL;

--9
SELECT
	naep.state,
	ROUND(avg_math_4_score, 2) as avg_math_4_score,
	total_expenditure
FROM naep LEFT OUTER JOIN finance
ON naep.id = finance.id
WHERE naep.year = 2000 AND avg_math_4_score IS NOT NULL
ORDER BY total_expenditure DESC;


